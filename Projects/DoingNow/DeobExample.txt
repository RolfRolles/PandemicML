sub     esp, 4
mov     [esp], eax => (2) push eax

push    eax
mov     eax, ebp
push    ebp
push    edi
mov     [esp], eax => (2) push eax

push    eax
mov     eax, ebp
push    ebp
push    eax
xor     dword ptr [esp], 7FEE03B1h
pop     ebp => (3) mov ebp, eax / xor ebp, imm

Extract the constant
Use it as the RHS in a binop

push    eax
mov     eax, ebp
push    ebp
mov     ebp, eax 
xor     ebp, 7FEE03B1h
sub     esp, 4
mov     [esp], esi => (2) replaced by previous observation with push esi

push    eax
mov     eax, ebp
push    ebp
mov     ebp, eax 
xor     ebp, 7FEE03B1h
push    esi
push    edx
mov     edx, 6F6B5081h
mov     esi, 0BC6D38Bh
add     esi, edx
pop     edx => (5) mov esi, (0x6F6B5081 + 0xBC6D38B)

push    eax
mov     eax, ebp
push    ebp
mov     ebp, eax 
xor     ebp, 7FEE03B1h
push    esi
mov     esi, (0x6F6B5081 + 0xBC6D38B)
not     esi => (2) mov esi, ~(0x6F6B5081 + 0xBC6D38B)

push    eax
mov     eax, ebp
push    ebp
mov     ebp, eax 
xor     ebp, 7FEE03B1h
push    esi
mov     esi, ~(0x6F6B5081 + 0xBC6D38B)
sub     esi, 4DFD842h => (2) mov esi, (~(0x6F6B5081 + 0xBC6D38B)) - 0x4DFD842 == 7FEE03B1h

push    eax
mov     eax, ebp
push    ebp
mov     ebp, eax 
xor     ebp, 7FEE03B1h
push    esi
mov     esi, 7FEE03B1h
xor     ebp, esi
pop     esi => (4) xor ebp, 7FEE03B1h

push    eax
mov     eax, ebp
push    ebp
mov     ebp, eax 
xor     ebp, 7FEE03B1h
xor     ebp, 7FEE03B1h => (2) {}

push    eax
mov     eax, ebp
push    ebp
mov     ebp, eax 
push    ebp
pop     ecx => (2) mov ecx, ebp

push    eax
mov     eax, ebp
push    ebp
mov     ebp, eax 
mov     ecx, ebp
push    dword ptr [esp]
mov     ebp, [esp]
add     esp, 4 => (2) pop ebp

push    eax
mov     eax, ebp
push    ebp
mov     ebp, eax 
mov     ecx, ebp
push    dword ptr [esp]
pop     ebp
add     esp, 4 => (3) pop ebp

push    eax
mov     eax, ebp
push    ebp
mov     ebp, eax 
mov     ecx, ebp
pop     ebp => (4) mov ecx, eax

push    eax
mov     eax, ebp
mov     ecx, eax
pop     eax => (4) mov ecx, ebp

mov     ecx, ebp
push    esi
mov     esi, esp
push    ecx
push    ecx
mov     ecx, 65B749C1h
sub     ecx, 5BFEA1E9h
dec     ecx
shl     ecx, 8
xor     ecx, 0B8A7D704h => (several applications of constant propagation) mov ecx, 4

mov     ecx, ebp
push    esi
mov     esi, esp
push    ecx
push    ecx
mov     ecx, 4
add     esi, 757F9542h
add     esi, ecx
push    eax
mov     eax, 757F9542h
sub     esi, eax
pop     eax => (4) sub esi, 757F9542h

mov     ecx, ebp
push    esi
mov     esi, esp
push    ecx
push    ecx
mov     ecx, 4
add     esi, 757F9542h
add     esi, ecx
sub     esi, 757F9542h => (3) add esi, ecx

mov     ecx, ebp
push    esi
mov     esi, esp
push    ecx
push    ecx
mov     ecx, 4
add     esi, ecx
pop     ecx => (4) add esi, 4

mov     ecx, ebp
push    esi
mov     esi, esp
push    ecx
add     esi, 4
sub     esi, 4 => (2) {} 

mov     ecx, ebp
push    esi
mov     esi, esp
push    ecx
xchg    esi, [esp] ; esi <- ecx, [esp] <- esp+4, esp <- [esp]
pop     esp => (4) mov esi, ecx

mov     ecx, ebp
push    esi
mov     esi, ecx

mov     [esp+0], edx
push    5CDF5572h
mov     [esp], edi
push    96h
mov     edi, [esp]
add     esp, 4
mov     edx, edi
mov     edi, [esp]
add     esp, 4
add     ecx, edx
mov     edx, [esp+0]
add     esp, 4
push    dword ptr [ecx]
sub     dword ptr [esp+0], 6BFBF3B6h
push    dword ptr [esp+0]
mov     ecx, [esp]
add     esp, 4
push    edx
mov     edx, esp
add     edx, 4
add     edx, 4
xchg    edx, [esp]
pop     esp
push    157855FDh
mov     [esp], eax
mov     eax, 2E9E20BFh
dec     eax
dec     eax
neg     eax
shl     eax, 1
